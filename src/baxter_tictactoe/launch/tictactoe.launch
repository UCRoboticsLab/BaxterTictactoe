<!-- Launching all required nodes for playing Tic Tac Toe with Baxter -->
<launch>

    <include file="$(find baxter_tictactoe)/launch/board_sensor.launch" />

    <!-- Range thresholds for the red tokens -->
    <rosparam param = "ttt_controller/hsv_red">
        H: [0,7]
        S: [189,256]
        V: [100,137]
    </rosparam>

    <!-- Range thresholds for the blue tokens -->
    <rosparam param = "ttt_controller/hsv_blue">
        H: [113,152]
        S: [99,246]
        V: [27,245]
    </rosparam>

    <rosparam param = "ttt_controller/tile_pile_position">[    0.657,-0.638, -0.05,
0.558, -0.633, 
0.551,-0.525, 
0.436,-0.638,
0.461275197494, -0.662352094183]</rosparam>

    <!-- 3D positions of the corners of the board -->
    <rosparam param = "ttt_controller/board_corner_poss">
        TL: [0.7657,-0.0759,-0.08]
        TR: [0.7763,-0.3180,-0.08]
        BR: [0.5341,-0.3226,-0.08]
        BL: [0.5319,-0.0842,-0.08]
    </rosparam>

    <rosparam param="ttt_controller/num_games">1</rosparam>
    <rosparam param="ttt_controller/cheating_games">[2, 3]</rosparam>
    <!-- <param name="ttt_controller/voice"       type="str" value="voice_cmu_us_jmk_arctic_clunits" /> -->
    <param name="ttt_controller/voice"       type="str" value="voice_kal_diphone" />
    <param name="ttt_controller/robot_color" type="str" value=             "blue" />

    <node name="tictactoe_brain" pkg="baxter_tictactoe" type="tictactoe_brain" respawn="false" output="screen" required="true"/>
    
    <node name="animator" pkg="baxter_face_animation" type="animator_server_with_different_expressions.py" respawn="true" output="screen" />

    <node name="soundplay_node" pkg="sound_play" type="soundplay_node.py" required="true"/>
</launch>
