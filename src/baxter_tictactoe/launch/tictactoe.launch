<!-- Launching all required nodes for playing Tic Tac Toe with Baxter -->
<launch>

    <include file="$(find baxter_tictactoe)/launch/board_sensor.launch" />

    <!-- Range thresholds for the red tokens -->
    <rosparam param = "ttt_controller/hsv_red">
        H: [160,  20]
        S: [ 40, 196]
        V: [ 50, 196]
    </rosparam>

    <!-- Range thresholds for the blue tokens -->
    <rosparam param = "ttt_controller/hsv_blue">
        H: [ 60, 130]
        S: [ 90, 256]
        V: [ 10, 256]
    </rosparam>

    <rosparam param = "ttt_controller/tile_pile_position">[0.7024,-0.6448,-0.05295,0.58186,-0.6438, 0.5813,-0.5292, 0.4551,-0.6414, 0.4643,-0.5218]</rosparam>

    <!-- 3D positions of the corners of the board -->
    <rosparam param = "ttt_controller/board_corner_poss">
        TL: [0.8333,-0.0895,-0.04447]
        TR: [0.8211,-0.32916,-0.0482]
        BR: [0.58577,-0.3351,-0.0474]
        BL: [0.5850,-0.09233,-0.0444]
    </rosparam>

    <rosparam param="ttt_controller/num_games">1</rosparam>
    <rosparam param="ttt_controller/cheating_games">[2, 3]</rosparam>
    <!-- <param name="ttt_controller/voice"       type="str" value="voice_cmu_us_jmk_arctic_clunits" /> -->
    <param name="ttt_controller/voice"       type="str" value="voice_kal_diphone" />
    <param name="ttt_controller/robot_color" type="str" value=             "blue" />

    <node name="tictactoe_brain" pkg="baxter_tictactoe" type="tictactoe_brain" respawn="false" output="screen" required="true"/>
    
    <node name="animator" pkg="baxter_face_animation" type="animator_server_with_different_expressions.py" respawn="true" output="screen" />

    <node name="soundplay_node" pkg="sound_play" type="soundplay_node.py" required="true"/>
</launch>
