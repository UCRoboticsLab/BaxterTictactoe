<!-- Launching all required nodes for playing Tic Tac Toe with Baxter -->
<launch>

    <include file="$(find baxter_tictactoe)/launch/board_sensor.launch" />

    <!-- Range thresholds for the red tokens -->
    <rosparam param = "ttt_controller/hsv_red">
        H: [160,  20]
        S: [ 40, 196]
        V: [ 50, 196]
    </rosparam>

    <!-- Range thresholds for the blue tokens -->
    <rosparam param = "ttt_controller/hsv_blue">
        H: [ 60, 130]
        S: [ 90, 256]
        V: [ 10, 256]
    </rosparam>

    <rosparam param = "ttt_controller/tile_pile_position">[0.6924,-0.6458,0.5746,-0.6478, -0.05295,0.5746,-0.6478,0.5786,-0.5508,0.4576, -0.6597,0.4417,-0.5439]</rosparam>

    <!-- 3D positions of the corners of the board -->
    <rosparam param = "ttt_controller/board_corner_poss">
        TL: [0.7859,-0.0868,-0.04]
        TR: [0.7982,-0.3258,-0.04]
        BR: [0.5566,-0.3366,-0.04]
        BL: [0.5597,-0.0991,-0.04]
    </rosparam>

    <rosparam param="ttt_controller/num_games">1</rosparam>
    <rosparam param="ttt_controller/cheating_games">[2, 3]</rosparam>
    <!-- <param name="ttt_controller/voice"       type="str" value="voice_cmu_us_jmk_arctic_clunits" /> -->
    <param name="ttt_controller/voice"       type="str" value="voice_kal_diphone" />
    <param name="ttt_controller/robot_color" type="str" value=             "blue" />

    <node name="tictactoe_brain" pkg="baxter_tictactoe" type="tictactoe_brain" respawn="false" output="screen" required="true"/>
    
    <node name="animator" pkg="baxter_face_animation" type="animator_server_with_different_expressions.py" respawn="true" output="screen" />

    <node name="soundplay_node" pkg="sound_play" type="soundplay_node.py" required="true"/>
</launch>
